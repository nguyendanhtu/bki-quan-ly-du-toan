// VBConversions Note: VB project level imports
using System;
using System.Drawing;
using System.Diagnostics;
using System.Data;
using Microsoft.VisualBasic;
using System.Collections;
using System.Windows.Forms;
// End of VB project level imports

using IP.Core.IPData;
using IP.Core.IPBusinessService;
using IP.Core.IPCommon;

//**********************************************
//* Generated by: TA
//* Date: 18/11/2003
//* Goal: Create User Service Class for HT_NGUOI_SU_DUNG
//************************************************




namespace IP.Core.IPUserService
{
	public class US_HT_NGUOI_SU_DUNG : US_Object
	{
		private const string c_TableName = "HT_NGUOI_SU_DUNG";

		#region Data Structures
		// Các cấu trúc dữ liệu dùng trong class
		//
		public enum enumKet_Qua_Kiem_Tra_Dang_Nhap
		{
			Invalid_Ten_Truy_Cap_Hoac_Mat_Khau,
			Invalid_DonVi,
			OK_Kiem_Tra_Dang_Nhap
		}

		public enum LogonResult
		{
			WrongPassword_OR_Name,
			User_Is_Locked,
			OK_Login_Succeeded
		}
		#endregion

		#region Public Properties
		public decimal dcID
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", 0);
			}
			set
			{
				pm_objDR["ID"] = value;
			}
		}

		public bool IsIDNull()
		{
			return pm_objDR.IsNull("ID");
		}

		public void SetIDNull()
		{
			pm_objDR["ID"] = System.Convert.DBNull;
		}

		public string strTEN_TRUY_CAP
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "TEN_TRUY_CAP", "");
			}
			set
			{
				pm_objDR["TEN_TRUY_CAP"] = value;
			}
		}

		public bool IsTEN_TRUY_CAPNull()
		{
			return pm_objDR.IsNull("TEN_TRUY_CAP");
		}

		public void SetTEN_TRUY_CAPNull()
		{
			pm_objDR["TEN_TRUY_CAP"] = System.Convert.DBNull;
		}

		public string strTEN
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "TEN", "");
			}
			set
			{
				pm_objDR["TEN"] = value;
			}
		}

		public bool IsTENNull()
		{
			return pm_objDR.IsNull("TEN");
		}

		public void SetTENNull()
		{
			pm_objDR["TEN"] = System.Convert.DBNull;
		}

		public string strMAT_KHAU
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "MAT_KHAU", "");
			}
			set
			{
				pm_objDR["MAT_KHAU"] = value;
			}
		}

		public bool IsMAT_KHAUNull()
		{
			return pm_objDR.IsNull("MAT_KHAU");
		}

		public void SetMAT_KHAUNull()
		{
			pm_objDR["MAT_KHAU"] = System.Convert.DBNull;
		}

		public DateTime datNGAY_TAO
		{
			get
			{
				return CNull.RowNVLDate(pm_objDR, "NGAY_TAO", DateTime.Parse("1/1/1900"));
			}
			set
			{
				pm_objDR["NGAY_TAO"] = value;
			}
		}

		public bool IsNGAY_TAONull()
		{
			return pm_objDR.IsNull("NGAY_TAO");
		}

		public void SetNGAY_TAONull()
		{
			pm_objDR["NGAY_TAO"] = System.Convert.DBNull;
		}

		public string strNGUOI_TAO
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "NGUOI_TAO", "");
			}
			set
			{
				pm_objDR["NGUOI_TAO"] = value;
			}
		}

		public bool IsNGUOI_TAONull()
		{
			return pm_objDR.IsNull("NGUOI_TAO");
		}

		public void SetNGUOI_TAONull()
		{
			pm_objDR["NGUOI_TAO"] = System.Convert.DBNull;
		}

		public string strTRANG_THAI
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "TRANG_THAI", "");
			}
			set
			{
				pm_objDR["TRANG_THAI"] = value;
			}
		}

		public bool IsTRANG_THAINull()
		{
			return pm_objDR.IsNull("TRANG_THAI");
		}

		public void SetTRANG_THAINull()
		{
			pm_objDR["TRANG_THAI"] = System.Convert.DBNull;
		}

		public string strBUILT_IN_YN
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "BUILT_IN_YN", "");
			}
			set
			{
				pm_objDR["BUILT_IN_YN"] = value;
			}
		}

		public bool IsBUILT_IN_YNNull()
		{
			return pm_objDR.IsNull("BUILT_IN_YN");
		}

		public void SetBUILT_IN_YNNull()
		{
			pm_objDR["BUILT_IN_YN"] = System.Convert.DBNull;
		}

		public decimal dcID_USER_GROUP
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_USER_GROUP", IPConstants.c_DefaultDecimal);
			}
			set
			{
				pm_objDR["ID_USER_GROUP"] = value;
			}
		}

		public bool IsID_USER_GROUPNull()
		{
			return pm_objDR.IsNull("ID_USER_GROUP");
		}

		public void SetID_USER_GROUPNull()
		{
			pm_objDR["ID_USER_GROUP"] = System.Convert.DBNull;
		}

		public decimal dcID_TRAINING_PROJECT
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID_TRAINING_PROJECT", IPConstants.c_DefaultDecimal);
			}
			set
			{
				pm_objDR["ID_TRAINING_PROJECT"] = value;
			}
		}

		public bool IsID_TRAINING_PROJECTNull()
		{
			return pm_objDR.IsNull("ID_TRAINING_PROJECT");
		}

		public void SetID_TRAINING_PROJECTNull()
		{
			pm_objDR["ID_TRAINING_PROJECT"] = System.Convert.DBNull;
		}

		//=======================================================
		//Service provided by Telerik (www.telerik.com)
		//Conversion powered by NRefactory.
		//Twitter: @telerik
		//Facebook: facebook.com/telerik
		//=======================================================

		#endregion]

		#region Init Functions
		public US_HT_NGUOI_SU_DUNG()
		{
			pm_objDS = new DS_HT_NGUOI_SU_DUNG();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}

		public US_HT_NGUOI_SU_DUNG(DataRow i_objDR)
			: this()
		{
			this.DataRow2Me(i_objDR);
		}

		public US_HT_NGUOI_SU_DUNG(decimal i_dbID)
		{
			pm_objDS = new DS_HT_NGUOI_SU_DUNG();
			pm_strTableName = c_TableName;
			this.FillDataset(pm_objDS, "Where ID = " + Conversion.Str(i_dbID));
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
		#endregion

		#region PUBLIC INTERFACE
		//' Created by LinhDH 2012.05.17
		//' Linhdh created 27/03/2012
		public bool CheckByTenTruyCap(string i_strTenTruyCap)
		{
			DS_HT_NGUOI_SU_DUNG v_ds = new DS_HT_NGUOI_SU_DUNG();
			CMakeAndSelectCmd v_objMakCmd = new CMakeAndSelectCmd(v_ds, v_ds.HT_NGUOI_SU_DUNG.TableName);
			v_objMakCmd.AddCondition(System.Convert.ToString(
				IP.Core.IPData.DBNames.HT_NGUOI_SU_DUNG.TEN_TRUY_CAP)
				, i_strTenTruyCap, eKieuDuLieu.KieuString, eKieuSoSanh.Bang);
			this.FillDatasetByCommand(v_ds, v_objMakCmd.getSelectCmd());
			if (v_ds.HT_NGUOI_SU_DUNG.Rows.Count == 0)
			{
				return false;
			}
			return true;
		}
		public int change_pass_word()
		{
			CStoredProc v_cstore = new CStoredProc("pr_HT_NGUOI_SU_DUNG_Change_Password");
			v_cstore.addNVarcharInputParam("@v_str_mat_khau_moi", this.strMAT_KHAU);
			v_cstore.addNVarcharInputParam("@v_str_ten_dang_nhap", this.strTEN_TRUY_CAP);
			v_cstore.ExecuteCommand(this);
			return 0;
		}
		public void InitByTenTruyCap(string i_strTenTruyCap)
		{
			DS_HT_NGUOI_SU_DUNG v_ds = new DS_HT_NGUOI_SU_DUNG();
			CMakeAndSelectCmd v_objMakCmd = new CMakeAndSelectCmd(v_ds, v_ds.HT_NGUOI_SU_DUNG.TableName);
			v_objMakCmd.AddCondition(System.Convert.ToString(
				IP.Core.IPData.DBNames.HT_NGUOI_SU_DUNG.TEN_TRUY_CAP)
				, i_strTenTruyCap, eKieuDuLieu.KieuString, eKieuSoSanh.Bang);
			this.FillDatasetByCommand(v_ds, v_objMakCmd.getSelectCmd());
			if (v_ds.HT_NGUOI_SU_DUNG.Rows.Count == 0)
			{
				throw (new Exception("Không có tên truy cập này!"));
			}
			this.DataRow2Me(v_ds.HT_NGUOI_SU_DUNG.Rows[0]);
		}
		public void check_user(string i_strTenTruyCap, string i_strMatKhau, ref LogonResult o_logonResult)
		{

			try
			{
				CStoredProc v_storedProc = new CStoredProc("pr_HT_Check_User_PWD");
				v_storedProc.addNVarcharInputParam("@ip_ten_truy_cap", i_strTenTruyCap);
				v_storedProc.addNVarcharInputParam("@ip_mat_khau", i_strMatKhau);

				System.Data.SqlClient.SqlParameter v_sqlResult =
					v_storedProc.addDecimalOutputParam("@op_ket_qua", 0);
				// thuc hien
				v_storedProc.ExecuteCommand(this);
				const int c_WrongNamePWD = -1;
				const int c_UserIsLocked = -2;
				const int c_LoginOK = 0;

				switch (Convert.ToInt16(v_sqlResult.Value))
				{
					case (short)c_WrongNamePWD:
						o_logonResult = LogonResult.WrongPassword_OR_Name;
						break;
					case (short)c_UserIsLocked:
						o_logonResult = LogonResult.User_Is_Locked;
						break;
					case (short)c_LoginOK:
						this.InitByTenTruyCap(i_strTenTruyCap);
						o_logonResult = LogonResult.OK_Login_Succeeded;
						break;
					default: //should never happen, stop if get there
						Debug.Assert(false);
						break;
				}
			}
			catch (Exception v_ex)
			{
				throw (v_ex);
			}
		}
		public override void Delete()
		{
			// Đoạn này đang làm ẩu
			if (this.strBUILT_IN_YN == "Y")
			{
				throw (new Exception("Không được xoá Admin"));
			}
			base.Delete();
		}
		public override void Insert()
		{
			this.datNGAY_TAO = DateTime.Now.Date;
			base.Insert();
		}
		public static bool IsHavingMA_QUYEN(
			decimal i_dc_user_id, string i_str_ma_quyen)
		{
			try
			{
				string v_str_is_having_quyen_yn = "";
				CStoredProc v_obj_pr = new CStoredProc("pr_is_having_quyen_user");
				System.Data.SqlClient.SqlParameter v_obj_para = new System.Data.SqlClient.SqlParameter();
				US_Object v_us_obj = new US_Object();
				v_obj_pr.addDecimalInputParam("@ip_dc_user_id", i_dc_user_id);
				v_obj_pr.addNVarcharInputParam("@ip_str_ma_quyen", i_str_ma_quyen);

				v_obj_para = v_obj_pr.addNVarcharOutputParam("@op_str_is_having_quyen", "N");
				v_obj_pr.ExecuteCommand(v_us_obj);
				v_str_is_having_quyen_yn = System.Convert.ToString(v_obj_para.Value);
				if (CIPConvert.ToBoolean(v_str_is_having_quyen_yn))
				{
					return true;
				}
				return false;
			}
			catch (Exception ex)
			{
				throw (ex);
				return false;
			}

		}
		#endregion

	}

}
