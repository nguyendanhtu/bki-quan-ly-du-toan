// VBConversions Note: VB project level imports
using System;
using System.Drawing;
using System.Diagnostics;
using System.Data;
using Microsoft.VisualBasic;
using System.Collections;
using System.Windows.Forms;
// End of VB project level imports

using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using IP.Core.IPData;

//************************************************
//* Generated by: CS
//* Date: 09/03/2004 03:28:28
//* Goal: Create User Service Class for HT_THAM_SO_HE_THONG
//************************************************




namespace IP.Core.IPUserService
{
	public class US_HT_THAM_SO_HE_THONG : US_Object
	{
		
		private const string c_TableName = "HT_THAM_SO_HE_THONG";
#region Public Properties
public decimal dcID
		{
			get
			{
				return CNull.RowNVLDecimal(pm_objDR, "ID", 0);
			}
			set
			{
				pm_objDR["ID"] = value;
			}
		}
		
		public bool IsIDNull()
		{
			return pm_objDR.IsNull("ID");
		}
		
		public void SetIDNull()
		{
			pm_objDR["ID"] = System.Convert.DBNull;
		}
		
public string strLOAI_THAM_SO
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "LOAI_THAM_SO", "");
			}
			set
			{
				pm_objDR["LOAI_THAM_SO"] = value;
			}
		}
		
		public bool IsLOAI_THAM_SONull()
		{
			return pm_objDR.IsNull("LOAI_THAM_SO");
		}
		
		public void SetLOAI_THAM_SONull()
		{
			pm_objDR["LOAI_THAM_SO"] = System.Convert.DBNull;
		}
		
public string strMA_THAM_SO
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "MA_THAM_SO", "");
			}
			set
			{
				pm_objDR["MA_THAM_SO"] = value;
			}
		}
		
		public bool IsMA_THAM_SONull()
		{
			return pm_objDR.IsNull("MA_THAM_SO");
		}
		
		public void SetMA_THAM_SONull()
		{
			pm_objDR["MA_THAM_SO"] = System.Convert.DBNull;
		}
		
public string strPHAN_HE
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "PHAN_HE", "");
			}
			set
			{
				pm_objDR["PHAN_HE"] = value;
			}
		}
		
		public bool IsPHAN_HENull()
		{
			return pm_objDR.IsNull("PHAN_HE");
		}
		
		public void SetPHAN_HENull()
		{
			pm_objDR["PHAN_HE"] = System.Convert.DBNull;
		}
		
public string strGHI_CHU
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "GHI_CHU", "");
			}
			set
			{
				pm_objDR["GHI_CHU"] = value;
			}
		}
		
		public bool IsGHI_CHUNull()
		{
			return pm_objDR.IsNull("GHI_CHU");
		}
		
		public void SetGHI_CHUNull()
		{
			pm_objDR["GHI_CHU"] = System.Convert.DBNull;
		}
		
public string strKIEU_DU_LIEU
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "KIEU_DU_LIEU", "");
			}
			set
			{
				pm_objDR["KIEU_DU_LIEU"] = value;
			}
		}
		
		public bool IsKIEU_DU_LIEUNull()
		{
			return pm_objDR.IsNull("KIEU_DU_LIEU");
		}
		
		public void SetKIEU_DU_LIEUNull()
		{
			pm_objDR["KIEU_DU_LIEU"] = System.Convert.DBNull;
		}
		
public string strGIA_TRI
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "GIA_TRI", "");
			}
			set
			{
				pm_objDR["GIA_TRI"] = value;
			}
		}
		
		public bool IsGIA_TRINull()
		{
			return pm_objDR.IsNull("GIA_TRI");
		}
		
		public void SetGIA_TRINull()
		{
			pm_objDR["GIA_TRI"] = System.Convert.DBNull;
		}
		
public string strCO_THE_NULL_YN
		{
			get
			{
				return CNull.RowNVLString(pm_objDR, "CO_THE_NULL_YN", "");
			}
			set
			{
				pm_objDR["CO_THE_NULL_YN"] = value;
			}
		}
		
		public bool IsCO_THE_NULL_YNNull()
		{
			return pm_objDR.IsNull("CO_THE_NULL_YN");
		}
		
		public void SetCO_THE_NULL_YNNull()
		{
			pm_objDR["CO_THE_NULL_YN"] = System.Convert.DBNull;
		}
		
#endregion
#region Init Functions
		public US_HT_THAM_SO_HE_THONG()
		{
			pm_objDS = new DS_HT_THAM_SO_HE_THONG();
			pm_strTableName = c_TableName;
			pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
		}
		
		public US_HT_THAM_SO_HE_THONG(DataRow i_objDR) : this()
		{
			this.DataRow2Me(i_objDR);
		}
		
		public US_HT_THAM_SO_HE_THONG(decimal i_dbID)
		{
			pm_objDS = new DS_HT_THAM_SO_HE_THONG();
			pm_strTableName = c_TableName;
			this.FillDataset(pm_objDS, "Where ID = " + Conversion.Str(i_dbID));
			pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
		}
#endregion
	}
	
}
